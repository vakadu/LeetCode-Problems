function subsetSum(nums) {
	let totalSum = nums.reduce((curr, sum) => (curr += sum), 0);
	if (totalSum % 2 === 0) {
		let target = totalSum / 2;
		return helper(nums, target, 0);
		// return tabulation(nums, target);
	} else {
		return false;
	}
}

function helper(nums, target, memo = {}) {}

// function tabulation(nums, target) {
// 	let table = new Array(target + 1).fill(false);
// 	table[0] = true;

// 	for (let i = 0; i < target; i++) {
// 		for (let num of nums) {
// 			if (table[i] === true) {
// 				table[i + num] = true;
// 			}
// 		}
// 	}

// 	console.log(table[target], target);
// }

console.log(subsetSum([1, 2, 5]));
console.log(subsetSum([1, 5, 11, 5]));
// console.log(
// 	subsetSum([
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
// 		99, 97,
// 	])
// );
